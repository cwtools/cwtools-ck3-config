enums = {
    # Aren't these just value fields? Doesn't look like it. Value fields miss desc and have more potential fields.
    enum[weight_chance_modifier_operators] = {
        add
        subtract
        multiply
        divide
        factor
    }
}

single_alias[weight_block] = {
    ## cardinality = 0..1
    base = float
    ## cardinality = 0..inf
    alias_name[weight] = alias_match_left[weight]
}

single_alias[weight_chance_modifier] = {
    ## cardinality = 0..inf
    enum[weight_chance_modifier_operators] = value_field

    ## cardinality = 0..inf
    alias_name[trigger] = alias_match_left[trigger]

    ## cardinality = 0..1
    desc = single_alias_right[complex_desc]
    ## cardinality = 0..1
    desc = localisation
}

### Appears in the tooltip only if the conditions are fulfilled.
alias[weight:modifier] = single_alias_right[weight_chance_modifier]
### Always appears in the tooltip, if any.
alias[weight:always_modifier] = single_alias_right[weight_chance_modifier]
alias[weight:compatibility_modifier] = {
    ## cardinality = 0..1
    trigger = single_alias_right[trigger_clause]
    who = scope[character]
    compatibility_target = scope[character]
    multiplier = value_field
    ## cardinality = 0..1
    ai_value_modifier = {
        ## cardinality = 0..inf
        trigger = single_alias_right[trigger_clause]
        ## cardinality = 0..inf
        enum[ai_values] = int_value_field
    }
    ## cardinality = 0..inf
    opinion_modifier = single_alias_right[opinion_chance_modifier]
}
# TODO: Separate these out into target or opinion target
alias[weight:opinion_modifier] = {
    ## cardinality = 0..1
    trigger = single_alias_right[trigger_clause]
    ## cardinality = 0..1
    who = scope[character]
    ## cardinality = 0..1
    opinion_target = scope[character]
    ## cardinality = 0..1
    target = scope[character]
    ## cardinality = 0..1
    multiplier = value_field
    ## cardinality = 0..1
    min = value_field
    ## cardinality = 0..1
    max = value_field
    ## cardinality = 0..1
    step = value_field
    ## cardinality = 0..1
    desc = single_alias_right[complex_desc]
    ## cardinality = 0..1
    desc = localisation
    # ## cardinality = 0..inf
    # enum[weight_chance_modifier_operators] = value_field
}
alias[weight:ai_value_modifier] = {
    ## cardinality = 0..1
    who = scope[character]
    ## cardinality = 0..inf
    enum[weight_chance_modifier_operators] = value_field
    ## cardinality = 0..inf
    alias_name[trigger] = alias_match_left[trigger]
    ## cardinality = 0..1
    desc = single_alias_right[complex_desc]
    ## cardinality = 0..1
    desc = localisation
    ## cardinality = 0..inf
    enum[ai_modifiers] = value_field
    ## cardinality = 0..1
    max = value_field
    ## cardinality = 0..1
    min = value_field
}
alias[weight:compare_modifier] = {
    ## cardinality = 0..1
    target = scope_field
    ## cardinality = 0..1
    trigger = single_alias_right[trigger_clause]
    ## cardinality = 0..1
    skill = enum[event_skills]
    ## cardinality = 0..1
    value = value_field
    ## cardinality = 0..1
    value = scope_field
    ## cardinality = 0..1
    multiplier = value_field
    ## cardinality = 0..1
    min = value_field
    ## cardinality = 0..1
    max = value_field
    ## cardinality = 0..1
    step = value_field
    ## cardinality = 0..1
    offset = value_field
    ## cardinality = 0..1
    desc = single_alias_right[complex_desc]
    ## cardinality = 0..1
    desc = localisation
}
alias[weight:<scripted_modifier>] = yes
alias[weight:<scripted_modifier.ai_target_modifier>] = {
    VALUE = int_value_field
}
